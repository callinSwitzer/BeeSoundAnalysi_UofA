ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if(length(new.pkg)) install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tuneR", "ggplot2", "compiler", "manipulate", "shiny", "seewave")
ipak(packages); rm(packages)
listen(sine(462))
setWavPlayer("afplay")
setWavPlayer("afplay")
listen(sine(462))
listen(sine(462))
file.choose()
w1 <- readWave(wavFle)
wavFle = "/Users/callinswitzer/Dropbox/dataAnalysisForOthers/SoundAnalysisforSteve/SLB_pair1_cut.wav"
w1 <- readWave(wavFle)
fundReturn <- function (wave, f, wl = 512, ovlp = 0, fmax, threshold = NULL,
from = NULL, to = NULL, plot = TRUE, xlab = "Time (s)", ylab = "Frequency (kHz)",
ylim = c(0, fmax*2), pb = FALSE, ...) {
input <- inputw(wave = wave, f = f)
wave <- input$w
f <- input$f
rm(input)
if (!is.null(from) | !is.null(to)) {
if (is.null(from) && !is.null(to)) {
a <- 1
b <- round(to * f)
}
if (!is.null(from) && is.null(to)) {
a <- round(from * f)
b <- length(wave)
}
if (!is.null(from) && !is.null(to)) {
if (from > to)
stop("'from' cannot be superior to 'to'")
if (from == 0) {
a <- 1
}
else {
a <- round(from * f)
}
b <- round(to * f)
}
wave <- as.matrix(wave[a:b, ])
}
if (!is.null(threshold)) {
wave <- afilter(wave = wave, f = f, threshold = threshold,
plot = FALSE)
}
wave <- ifelse(wave == 0, yes = 1e-06, no = wave)
n <- nrow(wave)
p <- round(n/2)
step <- seq(1, n - wl, wl - (ovlp * wl/100))
N <- length(step)
WL <- wl%/%2
z1 <- matrix(data = numeric(wl * N), wl, N)
if (pb) {
pbar <- txtProgressBar(min = 0, max = n, style = 3)
}
for (i in step) {
z1[, which(step == i)] <- Re(fft(log(abs(fft(wave[i:(wl +
i - 1), ]))), inverse = TRUE))
if (pb) {
setTxtProgressBar(pbar, i)
}
}
z2 <- z1[1:WL, ]
z <- ifelse(z2 == "NaN" | z2 == "-Inf", yes = 0, no = z2)
fmaxi <- f%/%fmax
tfund <- numeric(N)
for (k in 1:N) {
tfund[k] <- which.max(z[-c(1:fmaxi), k])
}
tfund <- as.numeric(ifelse(tfund == 1, yes = "NA", no = tfund))
ffund <- f/(tfund + fmaxi - 1)
x <- seq(0, n/f, length.out = N)
y <- ffund/1000
res <- cbind(x, y)
if (plot) {
plot(x = x, y = y, xaxs = "i", xlab = xlab, yaxs = "i",
ylab = ylab, ylim = ylim, las = 1, ...)
invisible(res)
}
else {
return(res)
}
if (pb)
close(pbar)
data.frame(x, y = y)
}
fundReturn <- cmpfun(fundReturn) # compile
fundReturn(w1)
fundReturn(w1, fmax = 500)
fundReturn(w1, fmax = 0.5)
fundReturn(w1, fmax = 1000)
fundReturn(w1, fmax = 20000)
fundReturn(w1, fmax = 50)
fundReturn(w1, fmax = 100)
fundReturn(w1, fmax = 400)
oscillo(w1)
oscillo(w1, from = 1, to = 2)
setwd("~/Documents/GitRepos/BeeSoundAnalysis_UofA")
setwd("~/Documents/GitRepos/BeeSoundAnalysis_UofA")
